result[0]=diffOperator.matrixValue("d00" ,j+i*(-1+Ny),j1+i1*(-1+Ny));
result[1]=0.;
result[2]=0.;
result[3]=0.;
result[4]=0.;
result[5]=0.;
result[6]=0.;
result[7]=0.;
result[8]=0.;
result[9]=diffOperator.matrixValue("d00" ,j+i*(-1+Ny),j1+i1*(-1+Ny));
result[10]=0.;
result[11]=0.;
result[12]=0.;
result[13]=0.;
result[14]=0.;
result[15]=0.;
result[16]=0.;
result[17]=0.;
result[18]=diffOperator.matrixValue("d00" ,j+i*(-1+Ny),j1+i1*(-1+Ny));
result[19]=0.;
result[20]=0.;
result[21]=0.;
result[22]=0.;
result[23]=0.;
result[24]=0.;
result[25]=0.;
result[26]=0.;
result[27]=diffOperator.matrixValue("d00" ,j+i*(-1+Ny),j1+i1*(-1+Ny));
result[28]=0.;
result[29]=0.;
result[30]=0.;
result[31]=0.;
result[32]=0.;
result[33]=0.;
result[34]=0.;
result[35]=0.;
result[36]=diffOperator.matrixValue("d00" ,j+i*(-1+Ny),j1+i1*(-1+Ny));
result[37]=0.;
result[38]=0.;
result[39]=0.;
result[40]=0.;
result[41]=0.;
result[42]=0.;
result[43]=0.;
result[44]=0.;
result[45]=diffOperator.matrixValue("d00" ,j+i*(-1+Ny),j1+i1*(-1+Ny));
result[46]=0.;
result[47]=0.;
result[48]=0.;
result[49]=0.;
result[50]=0.;
result[51]=0.;
result[52]=0.;
result[53]=0.;
result[54]=diffOperator.matrixValue("d00" ,j+i*(-1+Ny),j1+i1*(-1+Ny));
result[55]=0.;
result[56]=0.;
result[57]=0.;
result[58]=0.;
result[59]=0.;
result[60]=0.;
result[61]=0.;
result[62]=0.;
result[63]=diffOperator.matrixValue("d10" ,j+i*(-1+Ny),j1+i1*(-1+Ny));